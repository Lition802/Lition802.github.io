<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lition的博客</title>
  
  <subtitle>生活明朗万物可爱</subtitle>
  <link href="https://blog.lition.love/atom.xml" rel="self"/>
  
  <link href="https://blog.lition.love/"/>
  <updated>2024-01-20T11:51:47.865Z</updated>
  <id>https://blog.lition.love/</id>
  
  <author>
    <name>Lition</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>释怀了</title>
    <link href="https://blog.lition.love/posts/14157.html"/>
    <id>https://blog.lition.love/posts/14157.html</id>
    <published>2024-01-20T11:47:33.000Z</published>
    <updated>2024-01-20T11:51:47.865Z</updated>
    
    <content type="html"><![CDATA[<p>我爱的人早在18岁的时候就爱过我了。至于她25岁的时候是谁的妻子，30岁是谁的母亲，我都祝她幸福。</p><p><a href="https://imgse.com/i/pFEXXY4"><img src="https://s11.ax1x.com/2024/01/20/pFEXXY4.md.jpg" alt="pFEXXY4.md.jpg"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我爱的人早在18岁的时候就爱过我了。至于她25岁的时候是谁的妻子，30岁是谁的母亲，我都祝她幸福。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/pFEXXY4&quot;&gt;&lt;img src=&quot;https://s11.ax1x.com/2024/01/20/</summary>
      
    
    
    
    
    <category term="日常" scheme="https://blog.lition.love/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>C语言中 各数据类型求绝对值</title>
    <link href="https://blog.lition.love/posts/42263.html"/>
    <id>https://blog.lition.love/posts/42263.html</id>
    <published>2024-01-16T08:47:01.000Z</published>
    <updated>2024-01-16T08:53:33.429Z</updated>
    
    <content type="html"><![CDATA[<p>C语言中 各数据类型取绝对值需要的不同函数</p><p>int-&gt;abs()</p><p>long -&gt;labs()</p><p>float -&gt;fabsf()</p><p>double-&gt;fabs()</p><p>long double-&gt;fabsl()</p><p>举个例子</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">float</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,fabsf(a));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;C语言中 各数据类型取绝对值需要的不同函数&lt;/p&gt;
&lt;p&gt;int-&amp;gt;abs()&lt;/p&gt;
&lt;p&gt;long -&amp;gt;labs()&lt;/p&gt;
&lt;p&gt;float -&amp;gt;fabsf()&lt;/p&gt;
&lt;p&gt;double-&amp;gt;fabs()&lt;/p&gt;
&lt;p&gt;long double-</summary>
      
    
    
    
    
    <category term="C语言" scheme="https://blog.lition.love/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Git使用出现git@github.com: Permission denied (publickey). 处理</title>
    <link href="https://blog.lition.love/posts/16394.html"/>
    <id>https://blog.lition.love/posts/16394.html</id>
    <published>2024-01-14T18:05:05.000Z</published>
    <updated>2024-01-14T18:32:52.436Z</updated>
    
    <content type="html"><![CDATA[<p>如果你的电脑只有一个git环境，那么极大多数情况是由于 GitHub 账号没有设置 ssh 公钥信息所致。</p><h1 id="检查邮箱与用户名"><a href="#检查邮箱与用户名" class="headerlink" title="检查邮箱与用户名"></a>检查邮箱与用户名</h1><p>git config –global –list 验证邮箱与GitHub注册时输入的是否一致</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAINTEXT"><figure class="iseeu highlight /plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global --list</span><br><span class="line">user.name=xxxxxx</span><br><span class="line">user.email=xxxxxxx@xxx.com</span><br></pre></td></tr></table></figure></div><h1 id="修改邮箱与用户名"><a href="#修改邮箱与用户名" class="headerlink" title="修改邮箱与用户名"></a>修改邮箱与用户名</h1><p>通过git config –global user.name “yourname”，git config –global user.email “<a href="mailto:&#101;&#x6d;&#x61;&#x69;&#x6c;&#64;&#101;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;">&#101;&#x6d;&#x61;&#x69;&#x6c;&#64;&#101;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a>“（这里得名字和邮箱都是注册github时用的）设置全局用户名和邮箱</p><h1 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h1><p>ssh-keygen -t rsa -C “这里换上你的邮箱”，一路回车，在出现选择时输入Y，再一路回车直到生成密钥。会在&#x2F;Users&#x2F;***&#x2F;路径下生成一个.ssh文件夹，密钥就存储在其中。</p><p><a href="https://imgse.com/i/pFidQN6"><img src="https://s11.ax1x.com/2024/01/15/pFidQN6.md.png" alt="pFidQN6.md.png"></a></p><h1 id="添加公钥"><a href="#添加公钥" class="headerlink" title="添加公钥"></a>添加公钥</h1><p>到git仓库，添加秘钥</p><p><a href="https://imgse.com/i/pFidtud"><img src="https://s11.ax1x.com/2024/01/15/pFidtud.png" alt="pFidtud.png"></a></p><p><a href="https://imgse.com/i/pFidNDA"><img src="https://s11.ax1x.com/2024/01/15/pFidNDA.md.png" alt="pFidNDA.md.png"></a></p><p><a href="https://imgse.com/i/pFidUHI"><img src="https://s11.ax1x.com/2024/01/15/pFidUHI.md.png" alt="pFidUHI.md.png"></a></p><p><a href="https://imgse.com/i/pFiddEt"><img src="https://s11.ax1x.com/2024/01/15/pFiddEt.md.png" alt="pFiddEt.md.png"></a></p><h1 id="测试是否添加成功"><a href="#测试是否添加成功" class="headerlink" title="测试是否添加成功"></a>测试是否添加成功</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAINTEXT"><figure class="iseeu highlight /plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">Hi XXXX! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></div><p>即可正常使用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如果你的电脑只有一个git环境，那么极大多数情况是由于 GitHub 账号没有设置 ssh 公钥信息所致。&lt;/p&gt;
&lt;h1 id=&quot;检查邮箱与用户名&quot;&gt;&lt;a href=&quot;#检查邮箱与用户名&quot; class=&quot;headerlink&quot; title=&quot;检查邮箱与用户名&quot;&gt;&lt;/a&gt;检</summary>
      
    
    
    
    
    <category term="技术" scheme="https://blog.lition.love/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>分手快乐</title>
    <link href="https://blog.lition.love/posts/49387.html"/>
    <id>https://blog.lition.love/posts/49387.html</id>
    <published>2024-01-14T14:06:54.000Z</published>
    <updated>2024-01-14T18:08:20.814Z</updated>
    
    <content type="html"><![CDATA[<p>你总有一天要跟所有的记忆相安无事握手言和，那里面有她也有你，有她的青春也有你的年华。</p><p>那个人永远活在时间里了，你把她拉不出来，自己也回不去，就这样吧，让她安静的留在那里吧。她不会发福不会老去不会带着家长里短柴油米醋的气息，她永远年轻永远漂亮穿着鲜艳长裙站在回忆里，对着你笑靥如花。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;你总有一天要跟所有的记忆相安无事握手言和，那里面有她也有你，有她的青春也有你的年华。&lt;/p&gt;
&lt;p&gt;那个人永远活在时间里了，你把她拉不出来，自己也回不去，就这样吧，让她安静的留在那里吧。她不会发福不会老去不会带着家长里短柴油米醋的气息，她永远年轻永远漂亮穿着鲜艳长裙站在回忆</summary>
      
    
    
    
    
    <category term="日常" scheme="https://blog.lition.love/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>C语言如何在一个.c源文件里调用另一个源文件中的函数</title>
    <link href="https://blog.lition.love/posts/61897.html"/>
    <id>https://blog.lition.love/posts/61897.html</id>
    <published>2024-01-05T02:57:17.000Z</published>
    <updated>2024-01-05T03:00:33.166Z</updated>
    
    <content type="html"><![CDATA[<p>对于C语言来说main函数是程序的入口，当我们要开发一个比较大的程序时，可能会有很多代码，这时候想要为了方便维护通常都采取模块开发，将不同类的模块写到不同的文件中</p><p>首先定义一个.h的头文件，如function.h,在里面声明将要实现的函数，如<code>int add(int a，int b)</code>;</p><p>然后新建一个源文件为<code>function.c</code>,在<code>function.c</code>的开头添加<code>#include &quot;function.h&quot;</code>,然后下面写头文件中已声明的函数的实现。</p><p>这样写完了之后，main函数如果要调用这个源文件中的函数，只需要在main函数的开头部分加入<code>#include&lt;function.h&gt;</code>，如此这般，main函数调用相应函数的时候就会自动找到程序的实现部分代码了</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><figcaption><span>function.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><figcaption><span>function.c</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;function.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><figcaption><span>main.c</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span><span class="string">&lt;function.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> a = <span class="number">1</span>,b =<span class="number">2</span>;</span><br><span class="line">   <span class="type">int</span> c = add(a,b); </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;对于C语言来说main函数是程序的入口，当我们要开发一个比较大的程序时，可能会有很多代码，这时候想要为了方便维护通常都采取模块开发，将不同类的模块写到不同的文件中&lt;/p&gt;
&lt;p&gt;首先定义一个.h的头文件，如function.h,在里面声明将要实现的函数，如&lt;code&gt;int</summary>
      
    
    
    
    
    <category term="C语言" scheme="https://blog.lition.love/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>丹姐结婚了</title>
    <link href="https://blog.lition.love/posts/51391.html"/>
    <id>https://blog.lition.love/posts/51391.html</id>
    <published>2024-01-02T03:01:11.000Z</published>
    <updated>2024-01-02T04:12:31.225Z</updated>
    
    <content type="html"><![CDATA[<p>十年了，终于又回老家看看了。</p><p>家里最小的姐姐也结婚了。</p><p><img src="https://s11.ax1x.com/2024/01/02/piXzwwV.md.jpg" alt="加载失败" title="漫天的星光，有一颗是你的愿望"> </p><!-- <center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="https://s11.ax1x.com/2024/01/02/piXzwwV.md.jpg">        <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">漫天的星光，有一颗是你的愿望</div></center>--><p>有很多话不知道从哪里开始说了，就这样吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;十年了，终于又回老家看看了。&lt;/p&gt;
&lt;p&gt;家里最小的姐姐也结婚了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s11.ax1x.com/2024/01/02/piXzwwV.md.jpg&quot; alt=&quot;加载失败&quot; title=&quot;漫天的星光，有一颗是你的愿望&quot;&gt; &lt;/</summary>
      
    
    
    
    
    <category term="日常" scheme="https://blog.lition.love/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>SparLink开发日志（一）</title>
    <link href="https://blog.lition.love/posts/64135.html"/>
    <id>https://blog.lition.love/posts/64135.html</id>
    <published>2023-12-30T12:40:07.000Z</published>
    <updated>2023-12-30T12:59:57.907Z</updated>
    
    <content type="html"><![CDATA[<p>收到了ESP8266开发板，开箱留念一下。</p><p><a href="https://imgse.com/i/piOaJtx"><img src="https://s11.ax1x.com/2023/12/30/piOaJtx.md.jpg" alt="piOaJtx.md.jpg"></a></p><p>买了两块CH340和一块TFT屏幕。</p><h1 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h1><h2 id="Arduino"><a href="#Arduino" class="headerlink" title="Arduino"></a>Arduino</h2><p>Arduino是一款JAVA开发的嵌入式开发IDE，在官网可以下载：<a href="https://www.arduino.cc/">https://www.arduino.cc/</a></p><p>点击<code>SOFTWARE</code></p><p><a href="https://imgse.com/i/piOaoEn"><img src="https://s11.ax1x.com/2023/12/30/piOaoEn.md.png" alt="piOaoEn.md.png"></a></p><p>选择你的操作系统，点击</p><p><a href="https://imgse.com/i/piOaOvF"><img src="https://s11.ax1x.com/2023/12/30/piOaOvF.md.png" alt="piOaOvF.md.png"></a></p><p>下载完后双击安装就可以。在安装过程中会弹出安装COM设备驱动，安装即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;收到了ESP8266开发板，开箱留念一下。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/piOaJtx&quot;&gt;&lt;img src=&quot;https://s11.ax1x.com/2023/12/30/piOaJtx.md.jpg&quot; alt=&quot;piOaJtx</summary>
      
    
    
    
    
    <category term="SparLink" scheme="https://blog.lition.love/tags/SparLink/"/>
    
  </entry>
  
  <entry>
    <title>解决执行npm命令报错：命令语法不正确</title>
    <link href="https://blog.lition.love/posts/42779.html"/>
    <id>https://blog.lition.love/posts/42779.html</id>
    <published>2023-12-30T12:22:09.000Z</published>
    <updated>2023-12-30T12:33:21.403Z</updated>
    
    <content type="html"><![CDATA[<p>问题：执行npm命令报错：命令语法不正确</p><p>分析：由于更改了npm prefix文件中的全局安装路径，导致config混乱</p><p>解决办法：删除C盘中的.npmrc文件，路径为<code>C:\用户名\.npmrc</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题：执行npm命令报错：命令语法不正确&lt;/p&gt;
&lt;p&gt;分析：由于更改了npm prefix文件中的全局安装路径，导致config混乱&lt;/p&gt;
&lt;p&gt;解决办法：删除C盘中的.npmrc文件，路径为&lt;code&gt;C:&#92;用户名&#92;.npmrc&lt;/code&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="技术" scheme="https://blog.lition.love/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Program File没有写权限的问题</title>
    <link href="https://blog.lition.love/posts/32380.html"/>
    <id>https://blog.lition.love/posts/32380.html</id>
    <published>2023-12-29T12:33:02.000Z</published>
    <updated>2023-12-29T12:34:01.557Z</updated>
    
    <content type="html"><![CDATA[<p>按Windows+R键，打开“运行”，然后输入“gpedit.msc”,就是打开组策略，这个在控制面板中也可以打开。</p><p>在组策略里找到“计算机配置”-“Windows设置”-“安全设置”-“本地策略”-“安全选项”，在“安全选项”里认真查找“用户帐户控制-以管理员模式批准运行所有管理员”这项，将这项禁用掉。</p><p>作为一个开发人员，使用Win10时，感觉每次都是在跟弱智的MS斗争，而且是每次都感觉自己被MS摁在地上无情摩擦的那种，算了，不吐槽了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;按Windows+R键，打开“运行”，然后输入“gpedit.msc”,就是打开组策略，这个在控制面板中也可以打开。&lt;/p&gt;
&lt;p&gt;在组策略里找到“计算机配置”-“Windows设置”-“安全设置”-“本地策略”-“安全选项”，在“安全选项”里认真查找“用户帐户控制-以管理</summary>
      
    
    
    
    
    <category term="技术" scheme="https://blog.lition.love/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>SparLink正式立项</title>
    <link href="https://blog.lition.love/posts/14022.html"/>
    <id>https://blog.lition.love/posts/14022.html</id>
    <published>2023-12-27T11:46:18.000Z</published>
    <updated>2023-12-30T12:41:54.862Z</updated>
    
    <content type="html"><![CDATA[<p>假期想做一个正经的项目，把这么多年学的知识一点点沉淀一下。</p><p>基本上底层用的是C语言，配合ESP8266，使用场景可以配合<a href="https://www.home-assistant.io/">home assistant</a>，接入家庭生态。</p><p>不过暂时没想好具体的开发方向。ESP8266有websocket模块，或许能用来跟电脑交互。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;假期想做一个正经的项目，把这么多年学的知识一点点沉淀一下。&lt;/p&gt;
&lt;p&gt;基本上底层用的是C语言，配合ESP8266，使用场景可以配合&lt;a href=&quot;https://www.home-assistant.io/&quot;&gt;home assistant&lt;/a&gt;，接入家庭生态。&lt;/p</summary>
      
    
    
    
    
    <category term="SparLink" scheme="https://blog.lition.love/tags/SparLink/"/>
    
  </entry>
  
  <entry>
    <title>C语言求阶乘</title>
    <link href="https://blog.lition.love/posts/4928.html"/>
    <id>https://blog.lition.love/posts/4928.html</id>
    <published>2023-12-26T16:13:38.000Z</published>
    <updated>2023-12-26T16:18:29.780Z</updated>
    
    <content type="html"><![CDATA[<p>一大早晨马上要考试了被问到阶乘这个问题，突然间懵了，思考了一会儿才想出来。</p><p>以下是在C语言的main函数中求一个数字的阶乘的代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> num, factorial = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数字：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (num &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入的数字必须大于等于0！\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= num; i++) &#123;</span><br><span class="line">        factorial *= i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d的阶乘为：%d\n&quot;</span>, num, factorial);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>代码解释：</p><ol><li><p>首先，定义了两个变量<code>num</code>和<code>factorial</code>，其中<code>num</code>表示输入的数字，<code>factorial</code>表示阶乘的结果。</p></li><li><p>使用<code>printf</code>函数提示用户输入一个数字，并使用<code>scanf</code>函数将用户输入的数字赋值给<code>num</code>变量。</p></li><li><p>使用<code>if</code>语句判断用户输入的数字是否小于0，如果小于0，则输出错误信息并返回。</p></li><li><p>使用<code>for</code>循环计算阶乘的结果，循环从1开始，每次乘以当前的循环变量<code>i</code>，并将结果赋值给<code>factorial</code>变量。</p></li><li><p>循环结束后，使用<code>printf</code>函数输出计算出的阶乘结果。</p></li><li><p>最后，返回0表示程序执行成功结束。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一大早晨马上要考试了被问到阶乘这个问题，突然间懵了，思考了一会儿才想出来。&lt;/p&gt;
&lt;p&gt;以下是在C语言的main函数中求一个数字的阶乘的代码：&lt;/p&gt;
&lt;div class=&quot;highlight-wrap&quot;autocomplete=&quot;off&quot; autocorrect=&quot;o</summary>
      
    
    
    
    
    <category term="C语言" scheme="https://blog.lition.love/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言取数字的每一位</title>
    <link href="https://blog.lition.love/posts/59073.html"/>
    <id>https://blog.lition.love/posts/59073.html</id>
    <published>2023-12-10T05:20:56.000Z</published>
    <updated>2023-12-10T05:45:24.466Z</updated>
    
    <content type="html"><![CDATA[<p>常常有将一个正整数各位数字倒序排列或是统计各数字数目的题目，难点就在于如何分离出正整数中的每一位数字，本次以C语言为模板尝试一下。</p><h1 id="递归法"><a href="#递归法" class="headerlink" title="递归法"></a>递归法</h1><p>步骤：</p><ol><li>获得该正整数的第一位数字或最后一位数字（考虑到分离出首位数字后接下来的可能为零，因此选择首先分离末位数字）</li><li>对分离出一位数字的剩下数字组成的正整数重复上步操作。</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">getNum</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> s=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">if</span>(n&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    s=n%<span class="number">10</span>;           <span class="comment">//分离末位数字</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,s);</span><br><span class="line">    getNum(n/<span class="number">10</span>);     <span class="comment">//对剩下数字递归</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> n;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">   getNum(n);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h1 id="迭代法"><a href="#迭代法" class="headerlink" title="迭代法"></a>迭代法</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">getNum</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> s;</span><br><span class="line">    <span class="type">int</span> len=(<span class="type">int</span>)<span class="built_in">log10</span>(n)+<span class="number">1</span>;         <span class="comment">//获得n的位数 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=n%<span class="number">10</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,s);</span><br><span class="line">        n=n/<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    getNum(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>while循环形式:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    j++;</span><br><span class="line">    n/=<span class="number">10</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;常常有将一个正整数各位数字倒序排列或是统计各数字数目的题目，难点就在于如何分离出正整数中的每一位数字，本次以C语言为模板尝试一下。&lt;/p&gt;
&lt;h1 id=&quot;递归法&quot;&gt;&lt;a href=&quot;#递归法&quot; class=&quot;headerlink&quot; title=&quot;递归法&quot;&gt;&lt;/a&gt;递归法&lt;</summary>
      
    
    
    
    
    <category term="C语言" scheme="https://blog.lition.love/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>OSI七层模型</title>
    <link href="https://blog.lition.love/posts/60596.html"/>
    <id>https://blog.lition.love/posts/60596.html</id>
    <published>2023-12-02T05:15:45.000Z</published>
    <updated>2023-12-02T05:35:33.246Z</updated>
    
    <content type="html"><![CDATA[<p>马上要竞赛了，正好在这里复习一下OSI模型。</p><p><a href="https://imgse.com/i/pissZpF"><img src="https://z1.ax1x.com/2023/12/02/pissZpF.png" alt="pissZpF.png"></a></p><h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><p>解决两个硬件之间怎么通信的问题，常见的物理媒介有光纤、电缆、中继器等。它主要定义物理设备标准，如网线的接口类型、光纤的接口类型、各种传输介质的传输速率等。</p><p>它的主要作用是传输比特流（就是由1、0转化为电流强弱来进行传输，到达目的地后在转化为1、0，也就是我们常说的数模转换与模数转换）。这一层的数据叫做比特。</p><p>设备：网卡、网线、集线器、中继器、调制解调器。</p><!-- 设备用：网桥（网桥的功能在延长网络跨度上类似于中继器，然而它能提供智能化连接服务，即根据帧的终点地址处于哪一网段来进行转发和滤除。网桥对站点所处网段的了解是靠**“自学习”**实现的）、交换机 --><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>在计算机网络中由于各种干扰的存在，物理链路是不可靠的。该层的主要功能就是：通过各种控制协议，将有差错的物理信道变为无差错的、能可靠传输数据帧的数据链路。</p><p>它的具体工作是接收来自物理层的位流形式的数据，并封装成帧，传送到上一层；同样，也将来自上层的数据帧，拆装为位流形式的数据转发到物理层。这一层的数据叫做帧。</p><p>设备：网桥、交换机。</p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>计算机网络中如果有多台计算机，怎么找到要发的那台？如果中间有多个节点，怎么选择路径？这就是路由要做的事。</p><p>该层的主要任务就是：通过路由选择算法，为报文（该层的数据单位，由上一层数据打包而来）通过通信子网选择最适当的路径。这一层定义的是IP地址，通过IP地址寻址，所以产生了IP协议。</p><p>设备：路由器。</p><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><p>当发送大量数据时，很可能会出现丢包的情况，另一台电脑要告诉是否完整接收到全部的包。如果缺了，就告诉丢了哪些包，然后再发一次，直至全部接收为止。</p><p>简单来说，传输层的主要功能就是：监控数据传输服务的质量，保证报文的正确传输。</p><p>设备：网关。</p><h2 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h2><p>虽然已经可以实现给正确的计算机，发送正确的封装过后的信息了。但我们总不可能每次都要调用传输层协议去打包，然后再调用IP协议去找路由，所以我们要建立一个自动收发包，自动寻址的功能。于是会话层出现了：它的作用就是建立和管理应用程序之间的通信。</p><h2 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h2><p>表示层负责数据格式的转换，将应用处理的信息转换为适合网络传输的格式，或者将来自下一层的数据转换为上层能处理的格式。</p><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><p>应用层是计算机用户，以及各种应用程序和网络之间的接口，其功能是直接向用户提供服务，完成用户希望在网络上完成的各种工作。前端同学对应用层肯定是最熟悉的。</p><h2 id="TCP-IP4层模型、5层模型和OSI七层模型的差别"><a href="#TCP-IP4层模型、5层模型和OSI七层模型的差别" class="headerlink" title="TCP&#x2F;IP4层模型、5层模型和OSI七层模型的差别"></a>TCP&#x2F;IP4层模型、5层模型和OSI七层模型的差别</h2><p><a href="https://imgse.com/i/pissKmR"><img src="https://z1.ax1x.com/2023/12/02/pissKmR.png" alt="pissKmR.png"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;马上要竞赛了，正好在这里复习一下OSI模型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/pissZpF&quot;&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/02/pissZpF.png&quot; alt=&quot;pissZpF.pn</summary>
      
    
    
    
    
    <category term="技术" scheme="https://blog.lition.love/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>素质都是人给的</title>
    <link href="https://blog.lition.love/posts/18348.html"/>
    <id>https://blog.lition.love/posts/18348.html</id>
    <published>2023-12-01T16:35:33.000Z</published>
    <updated>2023-12-01T16:43:28.989Z</updated>
    
    <content type="html"><![CDATA[<p>都12点35了，还没睡着。</p><p>被同学吵的受不了了，拿起手机刷了刷知乎，搜索一下，大学宿舍太吵睡不着觉，居然发现了500多个回答。其中称完全不顾别人感受的室友比比皆是，一团和气的寝室终究是少数。</p><p>我感觉实在不行我也要搬出去住了，天天晚上至少要1点才能睡觉，一个外放爱奇艺一个连麦打游戏。我很诧异为什么除了我自己所在的寝室，都是和和睦睦的相处。</p><p>晚上用金山打字通敲了一个小时，英文输入的话大概速度是110&#x2F;分钟。算中等水平吧，打字员入门水平。感觉这个水平很难再往上提升了，再就是练练盲打和五笔。五笔的话一直找不到合适的时间去练习。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;都12点35了，还没睡着。&lt;/p&gt;
&lt;p&gt;被同学吵的受不了了，拿起手机刷了刷知乎，搜索一下，大学宿舍太吵睡不着觉，居然发现了500多个回答。其中称完全不顾别人感受的室友比比皆是，一团和气的寝室终究是少数。&lt;/p&gt;
&lt;p&gt;我感觉实在不行我也要搬出去住了，天天晚上至少要1点才能</summary>
      
    
    
    
    
    <category term="日常" scheme="https://blog.lition.love/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>通过js判断网页失焦</title>
    <link href="https://blog.lition.love/posts/17908.html"/>
    <id>https://blog.lition.love/posts/17908.html</id>
    <published>2023-11-29T16:40:44.000Z</published>
    <updated>2023-12-01T16:26:47.066Z</updated>
    
    <content type="html"><![CDATA[<p>考试的时候看到考试软件有检测失焦的功能，切屏到一定次数会判定为不及格，好奇的了解了一下原理。</p><p>以下摘自W3school。</p><blockquote><p><code>onblur</code>是一个JavaScript事件，用于在元素失去焦点时触发特定的操作或函数。<code>onblur</code> 事件与 <code>onfocus</code> 事件相反。</p></blockquote><p>通过js监听<code>onfous</code>和<code>onblur</code>事件，自己尝试实现了一下。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> blurtime = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> focustime = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> isFirst = <span class="literal">true</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onfocus</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">focustime = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">valueOf</span>();</span><br><span class="line"><span class="keyword">let</span> second = (focustime - blurtime) / <span class="number">1000</span>;</span><br><span class="line">second = <span class="title class_">Math</span>.<span class="title function_">round</span>((second + <span class="title class_">Number</span>.<span class="property">EPSILON</span>) * <span class="number">10</span>) / <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (!isFirst) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`请注意，你失去焦点了！总共离开<span class="subst">$&#123;second&#125;</span>秒`</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onblur</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (isFirst) &#123;</span><br><span class="line">isFirst = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">blurtime = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">valueOf</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><p>同时本页面也嵌入了这个代码，按下<code>F12</code>进入控制台即可看到输出。</p><script>console.log('加载成功，开始监听网页失焦');let blurtime=null;let focustime=null;let isFirst=true;window.onfocus=function(){focustime=new Date().valueOf();let second=(focustime-blurtime)/1000;second=Math.round((second+Number.EPSILON)*10)/10;if(!isFirst){console.log(`请注意，你失去焦点了！总共离开${second}秒`)}};window.onblur=function(){if(isFirst){isFirst=false}blurtime=new Date().valueOf()};</script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;考试的时候看到考试软件有检测失焦的功能，切屏到一定次数会判定为不及格，好奇的了解了一下原理。&lt;/p&gt;
&lt;p&gt;以下摘自W3school。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;onblur&lt;/code&gt;是一个JavaScript事件，用于在元素失去焦点时触发特定</summary>
      
    
    
    
    
    <category term="技术" scheme="https://blog.lition.love/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>迁移博客了</title>
    <link href="https://blog.lition.love/posts/1241.html"/>
    <id>https://blog.lition.love/posts/1241.html</id>
    <published>2023-11-29T02:26:03.000Z</published>
    <updated>2023-11-29T03:01:58.837Z</updated>
    
    <content type="html"><![CDATA[<p>博客有一年没打理了，现在回去看看感觉以前写的东西都是些无病呻吟，就删去了大半部分，换了个主题，好好写点技术类博客。</p><!more><p>主题从<code>butterfly</code>换成了<a href="https://github.com/lotabout/hexo-theme-noise"><code>noise</code></a>，看多了花里胡哨，现在只想要简洁。</p><p>不过这个主题问题还是蛮多的，年久失修，代码块超级丑，随便啦。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;博客有一年没打理了，现在回去看看感觉以前写的东西都是些无病呻吟，就删去了大半部分，换了个主题，好好写点技术类博客。&lt;/p&gt;
&lt;!more&gt;

&lt;p&gt;主题从&lt;code&gt;butterfly&lt;/code&gt;换成了&lt;a href=&quot;https://github.com/lotabou</summary>
      
    
    
    
    
    <category term="日常" scheme="https://blog.lition.love/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>C语言使用指针遍历数组</title>
    <link href="https://blog.lition.love/posts/53687.html"/>
    <id>https://blog.lition.love/posts/53687.html</id>
    <published>2023-11-27T11:26:48.000Z</published>
    <updated>2023-12-01T16:56:35.718Z</updated>
    
    <content type="html"><![CDATA[<p>今天上C语言课踩了个坑，我以为使用指针操作数组中的元素时，+1代表偏移一位，没想到是偏移一个内存单元。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure></div><p>对于这个数组，只需要下面的代码就可以进行遍历。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *p;</span><br><span class="line">p=arr; 指针指向数组首个元素</span><br><span class="line"><span class="comment">// 这里直接写死遍历4次</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*p); <span class="comment">// 在这里可以进行操作</span></span><br><span class="line">    p++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天上C语言课踩了个坑，我以为使用指针操作数组中的元素时，+1代表偏移一位，没想到是偏移一个内存单元。&lt;/p&gt;
&lt;div class=&quot;highlight-wrap&quot;autocomplete=&quot;off&quot; autocorrect=&quot;off&quot; autocapitalize=&quot;o</summary>
      
    
    
    
    
    <category term="C语言" scheme="https://blog.lition.love/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>获取B站视频下载链接</title>
    <link href="https://blog.lition.love/posts/45317.html"/>
    <id>https://blog.lition.love/posts/45317.html</id>
    <published>2022-04-11T01:45:01.000Z</published>
    <updated>2023-12-25T05:03:43.773Z</updated>
    
    <content type="html"><![CDATA[<!-- https://api.bilibili.com/x/player/playurl?avid=797486918&cid=245068432&qn=1&type=&otype=json&platform=html5&high_quality=1 --><p>这个方法是目前市面上最常规和高清的解析方法。获取到的也直接是MP4。使用本文的方法可以从此远离所有的解析程序。当然操作步骤有点麻烦。</p><p>B站的视频解析需要两个参数，aid和cid。它对标的就是视频和分段。</p><p>那怎么拿到这两个参数呢，需要下面这个接口</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAINTEXT"><figure class="iseeu highlight /plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[GET] http://api.bilibili.com/x/web-interface/view?bvid=&#123;BVID&#125;</span><br></pre></td></tr></table></figure></div><p>把上面的<code>&#123;BVID&#125;</code>换成你需要查询的BVID即可</p><p>我们拿<code>BV1jy4y1r74k</code>来举例子</p><p>访问<code>http://api.bilibili.com/x/web-interface/view?bvid=BV1jy4y1r74k</code></p><p><img src="https://s11.ax1x.com/2023/12/25/piHwaQJ.png"></p><p>这里我们取<code>data</code>部分来看</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSON"><figure class="iseeu highlight /json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bvid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BV1jy4y1r74k&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aid&quot;</span><span class="punctuation">:</span> <span class="number">797486918</span><span class="punctuation">,</span>  <span class="comment">//  &lt;- aid</span></span><br><span class="line">    <span class="attr">&quot;videos&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tid&quot;</span><span class="punctuation">:</span> <span class="number">86</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;特摄&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;copyright&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pic&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://i1.hdslb.com/bfs/archive/259550d2fb9cc0c5e380e7e8d8fe382512cb75a3.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;【KRL字幕组】不破使用日本狼变身和必杀片段&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;视频素材来自KRL字幕组&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;duration&quot;</span><span class="punctuation">:</span> <span class="number">107</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;owner&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;mid&quot;</span><span class="punctuation">:</span> <span class="number">44918570</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;一只布瑞&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;face&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://i2.hdslb.com/bfs/face/591b17c4005e071a84fe8e4480a0bd52f6307d71.jpg&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cid&quot;</span><span class="punctuation">:</span> <span class="number">245068432</span><span class="punctuation">,</span>  <span class="comment">// &lt;- cid</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>接着我们访问</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAINTEXT"><figure class="iseeu highlight /plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[GET] https://api.bilibili.com/x/player/playurl?avid=&#123;AID&#125;&amp;cid=&#123;CID&#125;&amp;qn=1&amp;type=&amp;otype=json&amp;platform=html5&amp;high_quality=1 </span><br></pre></td></tr></table></figure></div><p><code>&#123;AID&#125;</code>换成上面获取的aid，<code>&#123;CID&#125;</code>换成上面获取的cid</p><p>我们的结果这就出来了</p><p><img src="https://s11.ax1x.com/2023/12/25/piHwNz4.png"></p><p><code>durl.url</code>和<code>durl.backup_url</code>都是可以播放的MP4</p><p>然后各位就可以拿去下载工具里下载，或在浏览器里访问，然后右击下载了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- https://api.bilibili.com/x/player/playurl?avid=797486918&amp;cid=245068432&amp;qn=1&amp;type=&amp;otype=json&amp;platform=html5&amp;high_quality=1 --&gt;

&lt;p&gt;这个方法</summary>
      
    
    
    
    
    <category term="日常" scheme="https://blog.lition.love/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
</feed>
